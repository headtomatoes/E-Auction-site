spring.application.name=ebay_clone

## Server Port
server.port=8082
            ## Change to 8080 if needed
# spring.datasource.url=jdbc:mysql://localhost:3307/Ebay_clone_db
# spring.datasource.username=wad
# spring.datasource.password=0987654321q

## Database Configuration for docker - consistently run on each person, do not change anymore
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
debug=true


logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG
logging.level.org.apache.tomcat.websocket=DEBUG

# WebSocket Configuration
spring.websocket.enabled=true
spring.websocket.max-text-message-size=32768
spring.websocket.max-binary-message-size=32768
spring.websocket.max-session-idle-timeout=120000
spring.websocket.async-send-timeout=60000


## Database Configuration
# spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/ebay_clone_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
# spring.datasource.username=${DB_USERNAME:root}
# spring.datasource.password=${DB_PASSWORD:pass}
# spring.datasource.url=jdbc:mysql://localhost:3306/ebay_clone_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
# spring.datasource.username=root
# spring.datasource.password=pass

            ## Use environment variables or config server in real apps
            ## Uncomment the above lines to use environment variables
            ## Make sure to set the DB_URL, DB_USERNAME, and DB_PASSWORD in your environment
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

## JPA/Hibernate Settings
spring.jpa.hibernate.ddl-auto = validate
            ## Use 'validate' or 'none' if using Liquibase. Use 'update' only for initial dev (careful!)
spring.jpa.show-sql=true
            ## Log SQL statements (useful for dev)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
            ## Adjust if needed

## Liquibase Configuration
# spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
# spring.liquibase.enabled=true
            ## Enabled by default if dependency present

#JWT Settings (Example - Store securely!)
# jwt.secret=${JWT_SECRET}
jwt.secret=1ilXgXfrANdVPpq6Kjo4YxybCugkQk8uW9nO3UKB6QiyWS7Fk/8qkvD2cIQ7wo/r7TDvfuWVzdoX2ifZCNcRUg==
            ## Use environment variables or config server in real apps
jwt.expiration.ms=86400000
            ## 24 hours

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8082/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
